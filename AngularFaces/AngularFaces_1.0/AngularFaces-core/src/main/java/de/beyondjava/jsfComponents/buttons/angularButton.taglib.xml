	<tag>
		<description><![CDATA[AngularButton is non-JSF button calling an AngularJS controller function. It replaces the form's ng-submit attribute which doesn't work well in a JSF environment.]]></description>
		<tag-name>angularButton</tag-name>
		<component>
			<component-type>de.beyondjava.AngularButton</component-type>
			<renderer-type>de.beyondjava.AngularButton</renderer-type>
		</component>
		<!--  AngularFaces attributes -->
		<attribute>
			<description><![CDATA[Angular function.]]></description>
			<name>ng-function</name>
			<required>true</required>
			<type>java.lang.String</type>
		</attribute>
		<!--  AngularFaces attributes end -->
		
		<attribute>
			<description><![CDATA[Unique identifier of the component in a namingContainer.]]></description>
			<name>id</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Label of the component.]]></description>
			<name>value</name>
			<required>false</required>
			<type>java.lang.Object</type>
		</attribute>
		<attribute>
			<description><![CDATA[Access key that when pressed transfers focus to the button.]]></description>
			<name>accesskey</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Alternate textual description of the button.]]></description>
			<name>alt</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Direction indication for text that does not inherit directionality. Valid values are LTR and RTL.]]></description>
			<name>dir</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Disables the button.]]></description>
			<name>disabled</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Style class representing the button icon.]]></description>
			<name>image</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[A localized user presentable name.]]></description>
			<name>label</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Code describing the language used in the generated markup for this component.]]></description>
			<name>lang</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Position of the button element in the tabbing order.]]></description>
			<name>tabindex</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Advisory tooltip informaton.]]></description>
			<name>title</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Flag indicating that this component will prevent changes by the user.]]></description>
			<name>readonly</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Inline style of the button element.]]></description>
			<name>style</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Style class of the button element.]]></description>
			<name>styleClass</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Client side callback to execute when button loses focus.]]></description>
			<name>onblur</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Client side callback to execute when input element receives focus.]]></description>
			<name>onfocus</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Client side callback to execute when a pointer button is moved within button.]]></description>
			<name>onmousemove</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Client side callback to execute when a pointer button is moved away from button.]]></description>
			<name>onmouseout</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Client side callback to execute when a pointer button is moved onto button.]]></description>
			<name>onmouseover</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Icon of the button.]]></description>
			<name>icon</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Position of the icon, default value is left.]]></description>
			<name>iconPos</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Displays button inline instead of fitting the content width, only used by mobile.]]></description>
			<name>inline</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[Defines if label of the component is escaped or not.]]></description>
			<name>escape</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
		</attribute>
	</tag>
		
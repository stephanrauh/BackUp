<facelet-taglib version="2.0"
	xmlns="http://java.sun.com/xml/ns/javaee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-facelettaglibrary_2_0.xsd">

	<namespace>http://beyondjava.net/angularFaces</namespace>

	<tag>
		<description><![CDATA[Secure add a certain - albeit not perfect - level of security to your application.]]></description>
		<tag-name>secure</tag-name>
		<component>
			<component-type>de.beyondjava.Secure</component-type>
			<renderer-type>de.beyondjava.Secure</renderer-type>
		</component>
		<attribute>
			<description><![CDATA[User-defined security checker class (fully qualified class name).]]></description>
			<name>checkedBy</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		
	</tag>

	<tag>
		<description><![CDATA[NGSync synchronizes JSF bean attributes with the Angular Models and vice versa.]]></description>
		<tag-name>sync</tag-name>
		<component>
			<component-type>de.beyondjava.Sync</component-type>
			<renderer-type>de.beyondjava.Sync</renderer-type>
		</component>
		<attribute>
			<description><![CDATA[Unique identifier of the component in a namingContainer.]]></description>
			<name>id</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Boolean value to specify the rendering of the component, when set to false component will not be rendered.]]></description>
			<name>rendered</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[An actionlistener to process when command is executed.]]></description>
			<name>actionListener</name>
			<required>false</required>
			<type>javax.faces.event.ActionListener</type>
		</attribute>
		<attribute>
			<description><![CDATA[A method expression or a string outcome to process when command is executed.]]></description>
			<name>action</name>
			<required>false</required>
			<type>javax.el.MethodExpression</type>
		</attribute>
		<attribute>
			<description><![CDATA[Name of the command.]]></description>
			<name>name</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Component(s) to update with ajax.]]></description>
			<name>update</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript handler to execute before ajax request is begins.]]></description>
			<name>onstart</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript handler to execute when ajax request is completed.]]></description>
			<name>oncomplete</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript handler to execute when ajax request fails.]]></description>
			<name>onerror</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript handler to execute when ajax request succeeds.]]></description>
			<name>onsuccess</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Global ajax requests are listened by ajaxStatus component, setting global to false will not trigger ajaxStatus.]]></description>
			<name>global</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[When set to true, ajax requests are not queued.]]></description>
			<name>async</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[When set to true, command will be invoked on page load.]]></description>
			<name>autoRun</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[When enabled, only values related to partially processed components would be serialized for ajax 
            instead of whole form.]]></description>
			<name>partialSubmit</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
		</attribute>
	</tag>


	<tag>
		<description><![CDATA[InputText is an extension to standard inputText with skinning capabilities.]]></description>
		<tag-name>inputText</tag-name>
		<component>
			<component-type>de.beyondjava.InputText</component-type>
			<renderer-type>de.beyondjava.InputText</renderer-type>
		</component>
		<attribute>
			<description><![CDATA[Unique identifier of the component in a namingContainer.]]></description>
			<name>id</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Boolean value to specify the rendering of the component, when set to false component will not be rendered.]]></description>
			<name>rendered</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[An el expression referring to a server side UIComponent instance in a backing bean.]]></description>
			<name>binding</name>
			<required>false</required>
			<type>javax.faces.component.UIComponent</type>
		</attribute>
		<attribute>
			<description><![CDATA[Value of the component.]]></description>
			<name>value</name>
			<required>false</required>
			<type>java.lang.Object</type>
		</attribute>
		<attribute>
			<description><![CDATA[An el expression or a literal text that defines a converter for the component. When it's an EL expression, it's resolved to a converter instance. 
    In case it's a static text, it must refer to a converter id.]]></description>
			<name>converter</name>
			<required>false</required>
			<type>java.faces.convert.Converter</type>
		</attribute>
		<attribute>
			<description><![CDATA[When set true, process validations logic is executed at apply request values phase for this component. Default is false.]]></description>
			<name>immediate</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[Marks component as required.]]></description>
			<name>required</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[A method expression referring to a method validationg the input.]]></description>
			<name>validator</name>
			<required>false</required>
			<type>javax.faces.validator.Validator</type>
		</attribute>
		<attribute>
			<description><![CDATA[A method binding expression referring to a method for handling a valuchangeevent.]]></description>
			<name>valueChangeListener</name>
			<required>false</required>
			<type>javax.faces.event.ValueChangeListener</type>
		</attribute>
		<attribute>
			<description><![CDATA[Message to display when required field validation fails.]]></description>
			<name>requiredMessage</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Message to display when conversion fails.]]></description>
			<name>converterMessage</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Message to display when validation fails.]]></description>
			<name>validatorMessage</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Access key to transfer focus to the input element.]]></description>
			<name>accesskey</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Alternate textual description of the input element.]]></description>
			<name>alt</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Controls browser autocomplete behavior.]]></description>
			<name>autocomplete</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Direction indication for text that does not inherit directionality.]]></description>
			<name>dir</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Disables the input element, default is false.]]></description>
			<name>disabled</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[A localized user presentable name.]]></description>
			<name>label</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[A localized user presentable name.]]></description>
			<name>lang</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Maximum number of characters that may be entered in this field.]]></description>
			<name>maxlength</name>
			<required>false</required>
			<type>int</type>
		</attribute>
		<attribute>
			<description><![CDATA[Client side callback to execute when input element loses focus.]]></description>
			<name>onblur</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Client side callback to execute when input element loses focus and its value has been modified since gaining focus.]]></description>
			<name>onchange</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Client side callback to execute when input element is clicked.]]></description>
			<name>onclick</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Client side callback to execute when input element is double clicked.]]></description>
			<name>ondblclick</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Client side callback to execute when input element receives focus.]]></description>
			<name>onfocus</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Client side callback to execute when a key is pressed down over input element.]]></description>
			<name>onkeydown</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Client side callback to execute when a key is pressed and released over input element.]]></description>
			<name>onkeypress</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Client side callback to execute when a key is released over input element.]]></description>
			<name>onkeyup</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Client side callback to execute when a pointer input element is pressed down over input element.]]></description>
			<name>onmousedown</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Client side callback to execute when a pointer input element is moved within input element.]]></description>
			<name>onmousemove</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Client side callback to execute when a pointer input element is moved away from input element.]]></description>
			<name>onmouseout</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Client side callback to execute when a pointer input element is moved onto input element.]]></description>
			<name>onmouseover</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Client side callback to execute when a pointer input element is released over input element.]]></description>
			<name>onmouseup</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Client side callback to execute when text within input element is selected by user.]]></description>
			<name>onselect</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Flag indicating that this input element will prevent changes by the user.]]></description>
			<name>readonly</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[Number of characters used to determine the width of the input element.]]></description>
			<name>size</name>
			<required>false</required>
			<type>int</type>
		</attribute>
		<attribute>
			<description><![CDATA[Inline style of the component.]]></description>
			<name>style</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Style class of the component.]]></description>
			<name>styleClass</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Advisory tooltip information.]]></description>
			<name>tabindex</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Advisory tooltip information.]]></description>
			<name>title</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[The placeholder attribute specifies a short hint that describes the expected value of an input field.]]></description>
			<name>placeholder</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Name of the client side widget.]]></description>
			<name>widgetVar</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Input field type. Default is text.]]></description>
			<name>type</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
	</tag>
	<tag>
		<description>
        	This is an html body tag activating the AngularJS framework.
         </description>
		<tag-name>body</tag-name>
		<component>
			<component-type>de.beyondjava.Body</component-type>
			<renderer-type>de.beyondjava.Body</renderer-type>
		</component>
		<attribute>
			<description><![CDATA[Optional: name of the AngularJS application.]]></description>
			<name>ng-app</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Name of the AngularJS controller class.]]></description>
			<name>ng-controller</name>
			<required>true</required>
			<type>java.lang.String</type>
		</attribute>
	</tag>
	<tag>
		<description><![CDATA[CommandButton is an extended version of standard JSF commandButton with ajax and skinning features.]]></description>
		<tag-name>commandButton</tag-name>
		<component>
			<component-type>de.beyondjava.CommandButton</component-type>
			<renderer-type>de.beyondjava.CommandButton</renderer-type>
		</component>
		<!-- AngularFaces attributes -->
		<attribute>
			<description><![CDATA[String value to specify an AngularJS or an ordinary Javascript function allowing to suppress the server request conditionally.]]></description>
			<name>suppressServerRequest</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Angular function.]]></description>
			<name>ng-function</name>
			<required>true</required>
			<type>java.lang.String</type>
		</attribute>
		<!-- AngularFaces attributes end -->

		<attribute>
			<description><![CDATA[Unique identifier of the component in a namingContainer.]]></description>
			<name>id</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Boolean value to specify the rendering of the component, when set to false component will not be rendered.]]></description>
			<name>rendered</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[An el expression referring to a server side UIComponent instance in a backing bean.]]></description>
			<name>binding</name>
			<required>false</required>
			<type>javax.faces.component.UIComponent</type>
		</attribute>
		<attribute>
			<description><![CDATA[Label of the component.]]></description>
			<name>value</name>
			<required>false</required>
			<type>java.lang.Object</type>
		</attribute>
		<attribute>
			<description><![CDATA[An actionlistener to process when command is executed.]]></description>
			<name>actionListener</name>
			<required>false</required>
			<type>javax.faces.event.ActionListener</type>
		</attribute>
		<attribute>
			<description><![CDATA[A method expression or a string outcome to process when command is executed.]]></description>
			<name>action</name>
			<required>false</required>
			<type>javax.el.MethodExpression</type>
		</attribute>
		<attribute>
			<description><![CDATA[Boolean value that determines the phaseId of the action event, 
    when true actions are processed at "Apply Request Values", when false at "Invoke Application" phase.]]></description>
			<name>immediate</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[Name of the client side widget.]]></description>
			<name>widgetVar</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Specifies the submit mode, when set to true (default), submit would be made with Ajax.]]></description>
			<name>ajax</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[When set to true, ajax requests are not queued.]]></description>
			<name>async</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[Component(s) to process partially instead of whole view.]]></description>
			<name>process</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Component(s) to be updated with ajax.]]></description>
			<name>update</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Client side callback to execute before ajax request is begins.]]></description>
			<name>onstart</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Client side callback to execute when ajax request is completed.]]></description>
			<name>oncomplete</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Client side callback to execute when ajax request fails.]]></description>
			<name>onerror</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Client side callback to execute when ajax request succeeds.]]></description>
			<name>onsuccess</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Defines whether to trigger ajaxStatus or not.]]></description>
			<name>global</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[When enabled, only values related to partially processed components would be serialized for ajax 
            instead of whole form.]]></description>
			<name>partialSubmit</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[Access key that when pressed transfers focus to the button.]]></description>
			<name>accesskey</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Alternate textual description of the button.]]></description>
			<name>alt</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Direction indication for text that does not inherit directionality. Valid values are LTR and RTL.]]></description>
			<name>dir</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Disables the button.]]></description>
			<name>disabled</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Style class representing the button icon.]]></description>
			<name>image</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[A localized user presentable name.]]></description>
			<name>label</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Code describing the language used in the generated markup for this component.]]></description>
			<name>lang</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Position of the button element in the tabbing order.]]></description>
			<name>tabindex</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Advisory tooltip informaton.]]></description>
			<name>title</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Sets the behavior of the button. Default is submit.]]></description>
			<name>type</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Flag indicating that this component will prevent changes by the user.]]></description>
			<name>readonly</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Inline style of the button element.]]></description>
			<name>style</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Style class of the button element.]]></description>
			<name>styleClass</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Client side callback to execute when button loses focus.]]></description>
			<name>onblur</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Client side callback to execute when button loses focus and its value has been modified since gaining focus.]]></description>
			<name>onchange</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Client side callback to execute when button is clicked.]]></description>
			<name>onclick</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Client side callback to execute when button is double clicked.]]></description>
			<name>ondblclick</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Client side callback to execute when button receives focus.]]></description>
			<name>onfocus</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Client side callback to execute when a key is pressed down over button.]]></description>
			<name>onkeydown</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Client side callback to execute when a key is pressed and released over button.]]></description>
			<name>onkeypress</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Client side callback to execute when a key is released over button.]]></description>
			<name>onkeyup</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Client side callback to execute when a pointer button is pressed down over button.]]></description>
			<name>onmousedown</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Client side callback to execute when a pointer button is moved within button.]]></description>
			<name>onmousemove</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Client side callback to execute when a pointer button is moved away from button.]]></description>
			<name>onmouseout</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Client side callback to execute when a pointer button is moved onto button.]]></description>
			<name>onmouseover</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Client side callback to execute when a pointer button is released over button.]]></description>
			<name>onmouseup</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Client side callback to execute when text within button is selected by user.]]></description>
			<name>onselect</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Icon of the button.]]></description>
			<name>icon</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Position of the icon, default value is left.]]></description>
			<name>iconPos</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Displays button inline instead of fitting the content width, only used by mobile.]]></description>
			<name>inline</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[Defines if label of the component is escaped or not.]]></description>
			<name>escape</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
		</attribute>
	</tag>
	<tag>
		<description><![CDATA[]]></description>
		<tag-name>message</tag-name>
		<component>
			<component-type>de.beyondjava.Message</component-type>
			<renderer-type>de.beyondjava.Message</renderer-type>
		</component>
		<attribute>
			<description><![CDATA[Unique identifier of the component in a namingContainer.]]></description>
			<name>id</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Boolean value to specify the rendering of the component, when set to false component will not be rendered.]]></description>
			<name>rendered</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[An el expression referring to a server side UIComponent instance in a backing bean.]]></description>
			<name>binding</name>
			<required>false</required>
			<type>javax.faces.component.UIComponent</type>
		</attribute>
		<attribute>
			<description><![CDATA[Specifies if the summary of the FacesMessage should be displayed. Default is false.]]></description>
			<name>showSummary</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[Specifies if the summary of the FacesMessage should be displayed. Default is true.]]></description>
			<name>showDetail</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[Identifier of the component whose messages to display only, takes precendence when used with globalOnly.]]></description>
			<name>for</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Defines if already rendered messages should be displayed. Default is true.]]></description>
			<name>redisplay</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[Defines display mode, valid values are text, icon and both(default).]]></description>
			<name>display</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Defines whether html would be escaped or not, defaults to true.]]></description>
			<name>escape</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[Comma seperated list of severities to display only.]]></description>
			<name>severity</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
	</tag>
	<tag>
		<description><![CDATA[AngularButton is non-JSF button calling an AngularJS controller function. It replaces the form's ng-submit attribute which doesn't work well in a JSF environment.]]></description>
		<tag-name>angularButton</tag-name>
		<component>
			<component-type>de.beyondjava.AngularButton</component-type>
			<renderer-type>de.beyondjava.AngularButton</renderer-type>
		</component>
		<!-- AngularFaces attributes -->
		<attribute>
			<description><![CDATA[Angular function.]]></description>
			<name>ng-function</name>
			<required>true</required>
			<type>java.lang.String</type>
		</attribute>
		<!-- AngularFaces attributes end -->

		<attribute>
			<description><![CDATA[Unique identifier of the component in a namingContainer.]]></description>
			<name>id</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Label of the component.]]></description>
			<name>value</name>
			<required>false</required>
			<type>java.lang.Object</type>
		</attribute>
		<attribute>
			<description><![CDATA[Access key that when pressed transfers focus to the button.]]></description>
			<name>accesskey</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Alternate textual description of the button.]]></description>
			<name>alt</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Direction indication for text that does not inherit directionality. Valid values are LTR and RTL.]]></description>
			<name>dir</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Disables the button.]]></description>
			<name>disabled</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Style class representing the button icon.]]></description>
			<name>image</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[A localized user presentable name.]]></description>
			<name>label</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Code describing the language used in the generated markup for this component.]]></description>
			<name>lang</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Position of the button element in the tabbing order.]]></description>
			<name>tabindex</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Advisory tooltip informaton.]]></description>
			<name>title</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Flag indicating that this component will prevent changes by the user.]]></description>
			<name>readonly</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Inline style of the button element.]]></description>
			<name>style</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Style class of the button element.]]></description>
			<name>styleClass</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Client side callback to execute when button loses focus.]]></description>
			<name>onblur</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Client side callback to execute when input element receives focus.]]></description>
			<name>onfocus</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Client side callback to execute when a pointer button is moved within button.]]></description>
			<name>onmousemove</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Client side callback to execute when a pointer button is moved away from button.]]></description>
			<name>onmouseout</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Client side callback to execute when a pointer button is moved onto button.]]></description>
			<name>onmouseover</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Icon of the button.]]></description>
			<name>icon</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Position of the icon, default value is left.]]></description>
			<name>iconPos</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Displays button inline instead of fitting the content width, only used by mobile.]]></description>
			<name>inline</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[Defines if label of the component is escaped or not.]]></description>
			<name>escape</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
		</attribute>
	</tag>
	<tag>
		<description><![CDATA[This is an enhanced Primefaces SelectBooleanCheckbox with built-in AngularJS support.]]></description>
		<tag-name>selectBooleanCheckbox</tag-name>
		<component>
			<component-type>de.beyondjava.SelectBooleanCheckbox</component-type>
			<renderer-type>de.beyondjava.SelectBooleanCheckbox</renderer-type>
		</component>
		<attribute>
			<description><![CDATA[Unique identifier of the component in a namingContainer.]]></description>
			<name>id</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Boolean value to specify the rendering of the component, when set to false component will not be rendered.]]></description>
			<name>rendered</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[An el expression referring to a server side UIComponent instance in a backing bean.]]></description>
			<name>binding</name>
			<required>false</required>
			<type>javax.faces.component.UIComponent</type>
		</attribute>
		<attribute>
			<description><![CDATA[Value of the component.]]></description>
			<name>value</name>
			<required>false</required>
			<type>java.lang.Object</type>
		</attribute>
		<attribute>
			<description><![CDATA[An el expression or a literal text that defines a converter for the component. When it's an EL expression, it's resolved to a converter instance. 
    In case it's a static text, it must refer to a converter id.]]></description>
			<name>converter</name>
			<required>false</required>
			<type>java.faces.convert.Converter</type>
		</attribute>
		<attribute>
			<description><![CDATA[When set true, process validations logic is executed at apply request values phase for this component. Default is false.]]></description>
			<name>immediate</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[Marks component as required.]]></description>
			<name>required</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[A method expression referring to a method validationg the input.]]></description>
			<name>validator</name>
			<required>false</required>
			<type>javax.faces.validator.Validator</type>
		</attribute>
		<attribute>
			<description><![CDATA[A method binding expression referring to a method for handling a valuchangeevent.]]></description>
			<name>valueChangeListener</name>
			<required>false</required>
			<type>javax.faces.event.ValueChangeListener</type>
		</attribute>
		<attribute>
			<description><![CDATA[Message to display when required field validation fails.]]></description>
			<name>requiredMessage</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Message to display when conversion fails.]]></description>
			<name>converterMessage</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Message to display when validation fails.]]></description>
			<name>validatorMessage</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Name of the client side widget.]]></description>
			<name>widgetVar</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[]]></description>
			<name>disabled</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[]]></description>
			<name>label</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[]]></description>
			<name>onchange</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[]]></description>
			<name>style</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[]]></description>
			<name>styleClass</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Label to display next to checkbox.]]></description>
			<name>itemLabel</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[The tabindex attribute specifies the tab order of an element when the "tab" button is used for navigating.]]></description>
			<name>tabindex</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
	</tag>
	<tag>
		<description><![CDATA[DataTable is an enhanced version of the standard Datatable that provides built-in solutions to many commons use cases like paging, sorting, selection, lazy loading, filtering and more.]]></description>
		<tag-name>NGDataTable</tag-name>
		<component>
			<component-type>de.beyondjava.NGDataTable</component-type>
			<renderer-type>org.primefaces.component.DataTableRenderer</renderer-type>
			<handler-class>org.primefaces.component.datatable.DataTableHandler</handler-class>
		</component>
		<attribute>
			<description><![CDATA[Unique identifier of the component in a namingContainer.]]></description>
			<name>id</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Boolean value to specify the rendering of the component, when set to false component will not be rendered.]]></description>
			<name>rendered</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[An el expression referring to a server side UIComponent instance in a backing bean.]]></description>
			<name>binding</name>
			<required>false</required>
			<type>javax.faces.component.UIComponent</type>
		</attribute>
		<attribute>
			<description><![CDATA[Datasource of the component.]]></description>
			<name>value</name>
			<required>false</required>
			<type>java.lang.Object</type>
		</attribute>
		<attribute>
			<description><![CDATA[Name of the iterator variable used to refer each data.]]></description>
			<name>var</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Number of rows to display per page. Default value is 0 meaning to display all data available.]]></description>
			<name>rows</name>
			<required>false</required>
			<type>java.lang.Integer</type>
		</attribute>
		<attribute>
			<description><![CDATA[Index of the first data to display.]]></description>
			<name>first</name>
			<required>false</required>
			<type>java.lang.Integer</type>
		</attribute>
		<attribute>
			<description><![CDATA[Name of the client side widget.]]></description>
			<name>widgetVar</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Enables pagination. Default is false.]]></description>
			<name>paginator</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[Template of the paginator.]]></description>
			<name>paginatorTemplate</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Template of the rowsPerPage dropdown.]]></description>
			<name>rowsPerPageTemplate</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Template of the currentPageReport UI.]]></description>
			<name>currentPageReportTemplate</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Maximum number of page links to display. Default is 10.]]></description>
			<name>pageLinks</name>
			<required>false</required>
			<type>java.lang.Integer</type>
		</attribute>
		<attribute>
			<description><![CDATA[Position of the paginator. Default is both.]]></description>
			<name>paginatorPosition</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Defines if paginator should be hidden if total data count is less than number of rows per page. Default is true.]]></description>
			<name>paginatorAlwaysVisible</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[Makes data scrollable with fixed header. Default is false.]]></description>
			<name>scrollable</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[Height in pixels for scrollable data.]]></description>
			<name>scrollHeight</name>
			<required>false</required>
			<type>java.lang.Integer</type>
		</attribute>
		<attribute>
			<description><![CDATA[Width in pixels for scrollable data.]]></description>
			<name>scrollWidth</name>
			<required>false</required>
			<type>java.lang.Integer</type>
		</attribute>
		<attribute>
			<description><![CDATA[Enables data selection, valid values are "single" and "multiple".]]></description>
			<name>selectionMode</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Reference to the selection data.]]></description>
			<name>selection</name>
			<required>false</required>
			<type>java.lang.Object</type>
		</attribute>
		<attribute>
			<description><![CDATA[Name of iterator to refer each row index.]]></description>
			<name>rowIndexVar</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Text to display when there is no data to display. Default is "No records found."]]></description>
			<name>emptyMessage</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Inline style of the main container.]]></description>
			<name>style</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Style class of the main container.]]></description>
			<name>styleClass</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Enables live scrolling. Default is false.]]></description>
			<name>liveScroll</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[Style class for each row.]]></description>
			<name>rowStyleClass</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Client side callback to execute before row expansion.]]></description>
			<name>onExpandStart</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Decides whether datatable columns are resizable or not.]]></description>
			<name>resizableColumns</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[Property to be used for default sorting.]]></description>
			<name>sortBy</name>
			<required>false</required>
			<type>java.lang.Object</type>
		</attribute>
		<attribute>
			<description><![CDATA[Sets sorting order. Default is "ascending"]]></description>
			<name>sortOrder</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Custom pluggable sortFunction for default sorting.]]></description>
			<name>sortFunction</name>
			<required>false</required>
			<type>javax.el.MethodExpression</type>
		</attribute>
		<attribute>
			<description><![CDATA[]]></description>
			<name>scrollRows</name>
			<required>false</required>
			<type>java.lang.Integer</type>
		</attribute>
		<attribute>
			<description><![CDATA[Unique identifier of row data.]]></description>
			<name>rowKey</name>
			<required>false</required>
			<type>java.lang.Object</type>
		</attribute>
		<attribute>
			<description><![CDATA[Client side event to invoke datatable filtering for input fields. Default is keyup.]]></description>
			<name>filterEvent</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Delay to wait in milliseconds before sending each filter query. Default is 300.]]></description>
			<name>filterDelay</name>
			<required>false</required>
			<type>java.lang.Integer</type>
		</attribute>
		<attribute>
			<description><![CDATA[Inline style of the table element.]]></description>
			<name>tableStyle</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Style class of the table element.]]></description>
			<name>tableStyleClass</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Decides whether datatable columns can be reordered using dragdrop.]]></description>
			<name>draggableColumns</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[Controls incell editing.]]></description>
			<name>editable</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[Defines if lazy loading is enabled for the data component.]]></description>
			<name>lazy</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[List to keep the filtered data if filtering is enabled.]]></description>
			<name>filteredValue</name>
			<required>false</required>
			<type>java.util.List</type>
		</attribute>
	</tag>
	<tag>
		<description><![CDATA[AngularFaces' Slider is just an ordinary PrimeFaces Slider. It updates the Angular models when the slider is moved. Slider is used to provide input with various customization options like orientation, display modes and skinning.]]></description>
		<tag-name>slider</tag-name>
		<component>
			<component-type>de.beyondjava.Slider</component-type>
			<renderer-type>org.primefaces.component.SliderRenderer</renderer-type>
		</component>
		<attribute>
			<description><![CDATA[Unique identifier of the component in a namingContainer.]]></description>
			<name>id</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Boolean value to specify the rendering of the component, when set to false component will not be rendered.]]></description>
			<name>rendered</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[An el expression referring to a server side UIComponent instance in a backing bean.]]></description>
			<name>binding</name>
			<required>false</required>
			<type>javax.faces.component.UIComponent</type>
		</attribute>
		<attribute>
			<description><![CDATA[Name of the client side widget.]]></description>
			<name>widgetVar</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Id of the input text that the slider will be used for.]]></description>
			<name>for</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Id of the component to display the slider value.]]></description>
			<name>display</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Minimum value of the slider. Default is 0.]]></description>
			<name>minValue</name>
			<required>false</required>
			<type>java.lang.Integer</type>
		</attribute>
		<attribute>
			<description><![CDATA[Maximum value of the slider. Default is 100.]]></description>
			<name>maxValue</name>
			<required>false</required>
			<type>java.lang.Integer</type>
		</attribute>
		<attribute>
			<description><![CDATA[Inline style of the container element.]]></description>
			<name>style</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Style class of the container element.]]></description>
			<name>styleClass</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Boolean value to enable/disable the animated move when background of slider is clicked. Default is true.]]></description>
			<name>animate</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[Sets the type of the slider, "horizontal" or "vertical". Default is horizontal.]]></description>
			<name>type</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Fixed pixel increments that the slider move in. Default is 1.]]></description>
			<name>step</name>
			<required>false</required>
			<type>java.lang.Integer</type>
		</attribute>
		<attribute>
			<description><![CDATA[Disables or enables the slider.]]></description>
			<name>disabled</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[Client side callback to execute when slide begins.]]></description>
			<name>onSlideStart</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Client side callback to execute during sliding.]]></description>
			<name>onSlide</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Client side callback to execute when slide ends.]]></description>
			<name>onSlideEnd</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
	</tag>
	<tag>
		<description><![CDATA[The selectOneMenu is a drop-down-menu (aka combobox) derived from its PrimeFaces counterpart. It notifies the Angular model on every click or change.]]></description>
		<tag-name>selectOneMenu</tag-name>
		<component>
			<component-type>de.beyondjava.SelectOneMenu</component-type>
			<renderer-type>de.beyondjava.SelectOneMenuRenderer</renderer-type>
		</component>
		<attribute>
			<description><![CDATA[Unique identifier of the component in a namingContainer.]]></description>
			<name>id</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Boolean value to specify the rendering of the component, when set to false component will not be rendered.]]></description>
			<name>rendered</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[An el expression referring to a server side UIComponent instance in a backing bean.]]></description>
			<name>binding</name>
			<required>false</required>
			<type>javax.faces.component.UIComponent</type>
		</attribute>
		<attribute>
			<description><![CDATA[Value of the component.]]></description>
			<name>value</name>
			<required>false</required>
			<type>java.lang.Object</type>
		</attribute>
		<attribute>
			<description><![CDATA[An el expression or a literal text that defines a converter for the component. When it's an EL expression, it's resolved to a converter instance. 
    In case it's a static text, it must refer to a converter id.]]></description>
			<name>converter</name>
			<required>false</required>
			<type>java.faces.convert.Converter</type>
		</attribute>
		<attribute>
			<description><![CDATA[When set true, process validations logic is executed at apply request values phase for this component. Default is false.]]></description>
			<name>immediate</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[Marks component as required.]]></description>
			<name>required</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[A method expression referring to a method validationg the input.]]></description>
			<name>validator</name>
			<required>false</required>
			<type>javax.faces.validator.Validator</type>
		</attribute>
		<attribute>
			<description><![CDATA[A method binding expression referring to a method for handling a valuchangeevent.]]></description>
			<name>valueChangeListener</name>
			<required>false</required>
			<type>javax.faces.event.ValueChangeListener</type>
		</attribute>
		<attribute>
			<description><![CDATA[Message to display when required field validation fails.]]></description>
			<name>requiredMessage</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Message to display when conversion fails.]]></description>
			<name>converterMessage</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Message to display when validation fails.]]></description>
			<name>validatorMessage</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Name of the client side widget.]]></description>
			<name>widgetVar</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[]]></description>
			<name>effect</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[]]></description>
			<name>effectSpeed</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[]]></description>
			<name>disabled</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[]]></description>
			<name>label</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[]]></description>
			<name>onchange</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[]]></description>
			<name>style</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[]]></description>
			<name>styleClass</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[]]></description>
			<name>panelStyle</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[]]></description>
			<name>panelStyleClass</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[]]></description>
			<name>var</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[]]></description>
			<name>height</name>
			<required>false</required>
			<type>java.lang.Integer</type>
		</attribute>
		<attribute>
			<description><![CDATA[]]></description>
			<name>tabindex</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[]]></description>
			<name>editable</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[]]></description>
			<name>onkeydown</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[]]></description>
			<name>onkeyup</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Displays an input filter for the list.]]></description>
			<name>filter</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[Match mode for filtering, valid values are startsWith (default), contains, endsWith and custom.]]></description>
			<name>filterMatchMode</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Client side function to use in custom filterMatchMode.]]></description>
			<name>filterFunction</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Defines if filtering would be case sensitive. Default is false.]]></description>
			<name>caseSensitive</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[Maximum number of characters that may be entered in this field.]]></description>
			<name>maxlength</name>
			<required>false</required>
			<type>java.lang.Integer</type>
		</attribute>
	</tag>
	<tag>
		<description><![CDATA[The selectOneRadio is a collection of radio buttons derived from its PrimeFaces counterpart. It notifies the Angular model on every click or change.]]></description>
		<tag-name>selectOneRadio</tag-name>
		<component>
			<component-type>de.beyondjava.SelectOneRadio</component-type>
			<renderer-type>de.beyondjava.SelectOneRadioRenderer</renderer-type>
		</component>
		<attribute>
			<description><![CDATA[Unique identifier of the component in a namingContainer.]]></description>
			<name>id</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Boolean value to specify the rendering of the component, when set to false component will not be rendered.]]></description>
			<name>rendered</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[An el expression referring to a server side UIComponent instance in a backing bean.]]></description>
			<name>binding</name>
			<required>false</required>
			<type>javax.faces.component.UIComponent</type>
		</attribute>
		<attribute>
			<description><![CDATA[Value of the component.]]></description>
			<name>value</name>
			<required>false</required>
			<type>java.lang.Object</type>
		</attribute>
		<attribute>
			<description><![CDATA[An el expression or a literal text that defines a converter for the component. When it's an EL expression, it's resolved to a converter instance. 
    In case it's a static text, it must refer to a converter id.]]></description>
			<name>converter</name>
			<required>false</required>
			<type>java.faces.convert.Converter</type>
		</attribute>
		<attribute>
			<description><![CDATA[When set true, process validations logic is executed at apply request values phase for this component. Default is false.]]></description>
			<name>immediate</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[Marks component as required.]]></description>
			<name>required</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[A method expression referring to a method validationg the input.]]></description>
			<name>validator</name>
			<required>false</required>
			<type>javax.faces.validator.Validator</type>
		</attribute>
		<attribute>
			<description><![CDATA[A method binding expression referring to a method for handling a valuchangeevent.]]></description>
			<name>valueChangeListener</name>
			<required>false</required>
			<type>javax.faces.event.ValueChangeListener</type>
		</attribute>
		<attribute>
			<description><![CDATA[Message to display when required field validation fails.]]></description>
			<name>requiredMessage</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Message to display when conversion fails.]]></description>
			<name>converterMessage</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Message to display when validation fails.]]></description>
			<name>validatorMessage</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Name of the client side widget.]]></description>
			<name>widgetVar</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[]]></description>
			<name>disabled</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[]]></description>
			<name>label</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[]]></description>
			<name>layout</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[]]></description>
			<name>onchange</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[]]></description>
			<name>style</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[]]></description>
			<name>styleClass</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[The tabindex attribute specifies the tab order of an element when the "tab" button is used for navigating.]]></description>
			<name>tabindex</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Plain mode displays radiobuttons using native browser rendering instead of themes.]]></description>
			<name>plain</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
		</attribute>
	</tag>
</facelet-taglib>
